<?php
// Підключення файлу конфігурації бази даних
require_once 'model/database.php';
// Отримуємо параметр "action" з URL або встановлюємо значення за замовчуванням
$action = isset($_GET['action']) ? $_GET['action'] : 'login';
// Шлях до контролера
$controllerPath = "controllers/{$action}.php";
// Перевіряємо, чи існує файл контролера
if (file_exists($controllerPath)) {
    require_once $controllerPath;
} else {
    echo "404 - Page not found";
}
?>
<?php
// Структура MVC:
// - models/Database.php (модель для роботи з БД)
// - views/ (представлення, шаблони HTML)
// - controllers/ (контролери для обробки логіки)
// - index.php (головна точка входу)
session_start();

require 'controllers/ProductController.php';
require 'controllers/AuthController.php';

$action = $_GET['action'] ?? 'index';

switch ($action) {
    case 'login':
        $controller = new AuthController();
        $controller->login();
        break;
    case 'logout':
        $controller = new AuthController();
        $controller->logout();
        break;
    case 'add':
        $controller = new ProductController();
        $controller->add();
        break;
    case 'edit':
        $controller = new ProductController();
        $controller->edit();
        break;
    case 'delete':
        $controller = new ProductController();
        $controller->delete();
        break;
    default:
        $controller = new ProductController();
        $controller->index();
        break;
}

1. Файл index.php
<?php
if (session_status() === PHP_SESSION_NONE) {
    session_start();
}
session_regenerate_id(true);
require "database.php";
$database = new Database("Products");
$database->connect();
// Перевірка чи користувач авторизований
if (isset($_SESSION["name"])) {
    $currentUser = $_SESSION["name"];
    $isAdmin = $_SESSION["admin"];
} else {
    header("Location: login.php");
    exit();
}
$result = $database->readAll();
?>
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Products</title>
    <style>
        body{
            background-color: #346573;
        }
    </style>
</head>
<body>
    <h1>Ласкаво просимо, <?= htmlspecialchars($currentUser) ?></h1>
    <form method="POST" action="logout.php">
        <input type="submit" value="LOGOUT">
    </form>
    <h2>Список товарів</h2>
    <table border="1">
        <tr>
            <th>ID</th>
            <th>Назва</th>
            <th>Країна</th>
            <th>Виробник</th>
            <th>Ціна</th>
            <th>Вибрати</th>
        </tr>
        <?php while ($row = $result->fetch_assoc()) { ?>
            <tr>
                <td><?= $row['ID'] ?></td>
                <td><?= $row['Name'] ?></td>
                <td><?= $row['Country'] ?></td>
                <td><?= $row['Producer'] ?></td>
                <td><?= $row['Price'] ?></td>
                <td><input type="checkbox" name="select[]" value="<?= $row['ID'] ?>"></td>
            </tr>
        <?php } ?>
    </table>
    <br>
    <?php if ($isAdmin) { ?>
        <button onclick="location.href='add.php'">Додати</button>
        <button id="editButton" onclick="location.href='edit.php?id=' + getSelectedId()" disabled>Змінити</button>
        <button id="deleteButton" onclick="location.href='delete.php?id=' + getSelectedId()" disabled>Видалити</button>
    <?php } ?>

    <script>
        // Функція для отримання ID вибраного товару
        function getSelectedId() {
            let selected = document.querySelector('input[name="select[]"]:checked');
            return selected ? selected.value : '';
        }

        // Функція для активації/деактивації кнопок
        function toggleButtons() {
            let selectedCheckbox = document.querySelector('input[name="select[]"]:checked');
            const editButton = document.getElementById('editButton');
            const deleteButton = document.getElementById('deleteButton');
            if (selectedCheckbox) {
                // Якщо є вибраний чекбокс, робимо кнопки активними
                editButton.disabled = false;
                deleteButton.disabled = false;
            } else {
                // Якщо немає вибраного чекбокса, блокуємо кнопки
                editButton.disabled = true;
                deleteButton.disabled = true;
            }
        }
        // Додаємо слухачів подій до чекбоксів
        const checkboxes = document.querySelectorAll('input[name="select[]"]');
        checkboxes.forEach(checkbox => {
            checkbox.addEventListener('change', toggleButtons);
        });
        // Ініціалізація стану кнопок при завантаженні сторінки
        toggleButtons();
    </script>
</body>
</html>
2. Файл login.php
<?php
if (session_status() === PHP_SESSION_NONE) {
    session_start();
}
session_regenerate_id(true);
require "database.php"; // Підключення класу Database
function validatePost(){
    $user["login"] = isset($_POST["login"]) ? strip_tags(trim($_POST["login"])) : "";
    if (strlen($user["login"]) < 1)
        return false;
    $user["pswd"] = isset($_POST["pswd"]) ? $_POST["pswd"] : "";
    if (strlen($user["pswd"]) < 1)
        return false;
    return $user;
}
if ($_SERVER["REQUEST_METHOD"] == "POST") {
    $error = "";
    $postUser = validatePost();
    if ($postUser) {
        $db = new Database("Products");
        $db->connect();
        $user = $db->readUser($postUser["login"]);
        if ($user && $user["Password"] == $postUser["pswd"]) {
            $_SESSION["name"] = $user["Login"];
            $_SESSION["admin"] = $db->isAdmin($user["ID"]);
            header("Location: index.php");
            exit();
        } else {
            $error = "Невірний пароль або логін";
        }
    } else {
        $error = "Невірний пароль або логін";
    }
    echo "$error<br>";
}
?>
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Login</title>
    <style>
        body{
            background-color: #346573;
        }
    </style>
</head>
<body>
<form method="POST">
    <input type="text" name="login" required><br>
    <input type="password" name="pswd" required><br>
    <input type="submit" value="Login">
</form>
</body>
</html>
3. Файл database.php
<?php
class Database {
    private $db;
    private $dbName;
    public function __construct($dbName) {
        $this->dbName = $dbName;
    }
    public function connect() {
        $this->db = new mysqli("localhost", "root", "Kondratskyi", $this->dbName);
        return !$this->db->connect_error;
    }
    public function disconnect() {
        return $this->db->close();
    }
    public function read($id) {
        $stmt = $this->db->prepare("SELECT * FROM Items WHERE ID = ?");
        $stmt->bind_param("i", $id);
        $stmt->execute();
        return $stmt->get_result()->fetch_assoc();
    }
    public function readAll() {
        return $this->db->query("SELECT * FROM Items");
    }
    public function insert($name, $country, $producer, $price) {
        $stmt = $this->db->prepare("INSERT INTO Items (Name, Country, Producer, Price) VALUES (?, ?, ?, ?)");
        $stmt->bind_param("sssd", $name, $country, $producer, $price);
        return $stmt->execute();
    }
    public function delete($id) {
        $stmt = $this->db->prepare("DELETE FROM Items WHERE ID = ?");
        $stmt->bind_param("i", $id);
        return $stmt->execute();
    }
    public function change($id, $name, $country, $producer, $price) {
        $stmt = $this->db->prepare("UPDATE Items SET Name=?, Country=?, Producer=?, Price=? WHERE ID=?");
        $stmt->bind_param("sssdi", $name, $country, $producer, $price, $id);
        return $stmt->execute();
    }
    // Метод для перевірки користувача за логіном
    public function readUser($login) {
        $stmt = $this->db->prepare("SELECT * FROM Users WHERE Login = ?");
        $stmt->bind_param("s", $login);
        $stmt->execute();
        return $stmt->get_result()->fetch_assoc();
    }
    // Метод для перевірки, чи є користувач адміністратором
    public function isAdmin($userId) {
        $stmt = $this->db->prepare("SELECT administrator FROM Users WHERE ID = ?");
        $stmt->bind_param("i", $userId);
        $stmt->execute();
        $result = $stmt->get_result()->fetch_assoc();
        return $result['administrator'] == 1;
    }
}?>
4. Файл add.php
<?php
if (session_status() === PHP_SESSION_NONE) {
    session_start();
}
session_regenerate_id(true);
// Перевіряємо, чи користувач авторизований
if (!isset($_SESSION["name"])) {
    header("Location: login.php");
    exit();
}
// Перевіряємо, чи користувач є адміністратором
if (!isset($_SESSION["admin"]) || $_SESSION["admin"] != 1) {
    header("Location: index.php");
    exit();
}
// Підключаємо клас Database
require_once 'index.php';
$database = new Database("Products");
$database->connect();
if ($_SERVER['REQUEST_METHOD'] === 'POST') {
    $name = $_POST['name'];
    $country = $_POST['country'];
    $producer = $_POST['producer'];
    $price = $_POST['price'];
    // Додаємо новий товар
    if ($database->insert($name, $country, $producer, $price)) {
        header('Location: index.php'); // Перенаправляємо на головну сторінку після успішного додавання
        exit();
    } else {
        echo "Помилка при додаванні товару.";
    }
}
?>
<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8">
    <title>Додати товар</title>
</head>
<body>
<h2>Додати товар</h2>
<form method="POST" action="">
    <label for="name">Назва:</label>
    <input type="text" name="name" id="name" required><br><br>

    <label for="country">Країна:</label>
    <input type="text" name="country" id="country" required><br><br>

    <label for="producer">Виробник:</label>
    <input type="text" name="producer" id="producer" required><br><br>

    <label for="price">Ціна:</label>
    <input type="number" name="price" id="price" step="0.01" required><br><br>

    <button type="submit">Додати</button>
</form>
</body>
</html>
5. Файл edit.php
<?php
if (session_status() === PHP_SESSION_NONE) {
    session_start();
}
session_regenerate_id(true);
// Генеруємо новий ідентифікатор сесії
session_regenerate_id(true);
// Перевіряємо, чи користувач авторизований
if (!isset($_SESSION["name"])) {
    header("Location: login.php");
    exit();
}
// Перевіряємо, чи користувач є адміністратором
if (!isset($_SESSION["admin"]) || $_SESSION["admin"] != 1) {
    header("Location: index.php");
    exit();
}
// Підключаємо клас Database
require_once 'index.php';
$database = new Database("Products");
$database->connect();
if (isset($_GET['id'])) {
    $id = $_GET['id'];
    $item = $database->read($id); // Отримуємо інформацію про товар
    if ($_SERVER['REQUEST_METHOD'] === 'POST') {
        $name = $_POST['name'];
        $country = $_POST['country'];
        $producer = $_POST['producer'];
        $price = $_POST['price'];

        // Оновлюємо товар
        if ($database->change($id, $name, $country, $producer, $price)) {
            header('Location: index.php'); // Перенаправляємо на головну сторінку після успішного оновлення
            exit();
        } else {
            echo "Помилка при оновленні товару.";
        }
    }
} else {
    echo "Немає ідентифікатора товару для редагування.";
    exit();
}
?>
<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8">
    <title>Редагувати товар</title>
</head>
<body>
<h2>Редагувати товар</h2>
<form method="POST" action="">
    <label for="name">Назва:</label>
    <input type="text" name="name" id="name" value="<?= $item['Name'] ?>" required><br><br>

    <label for="country">Країна:</label>
    <input type="text" name="country" id="country" value="<?= $item['Country'] ?>" required><br><br>

    <label for="producer">Виробник:</label>
    <input type="text" name="producer" id="producer" value="<?= $item['Producer'] ?>" required><br><br>

    <label for="price">Ціна:</label>
    <input type="number" name="price" id="price" step="0.01" value="<?= $item['Price'] ?>" required><br><br>

    <button type="submit">Оновити</button>
</form>
</body>
</html>
6. Файл delete.php
<?php
if (session_status() === PHP_SESSION_NONE) {
    session_start();
}
session_regenerate_id(true);
// Генеруємо новий ідентифікатор сесії
session_regenerate_id(true);
// Перевіряємо, чи користувач авторизований
if (!isset($_SESSION["name"])) {
    header("Location: login.php");
    exit();
}
// Перевіряємо, чи користувач є адміністратором
if (!isset($_SESSION["admin"]) || $_SESSION["admin"] != 1) {
    header("Location: index.php");
    exit();
}
// Підключаємо клас Database
require_once 'index.php';
$database = new Database("Products");
$database->connect();
if (isset($_GET['id'])) {
    $id = $_GET['id'];

    // Видаляємо товар
    if ($database->delete($id)) {
        header('Location: index.php'); // Перенаправляємо на головну сторінку після успішного видалення
        exit();
    } else {
        echo "Помилка при видаленні товару.";
    }
} else {
    echo "Немає ідентифікатора товару для видалення.";
    exit();
}
?>
7. Файл logout.php
<?php
if (session_status() === PHP_SESSION_NONE) {
    session_start();
}
session_regenerate_id(true);
session_unset();
session_destroy();
header("Location: login.php");
exit();
?>